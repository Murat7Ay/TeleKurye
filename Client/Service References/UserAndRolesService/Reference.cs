//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.UserAndRolesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserModel", Namespace="http://schemas.datacontract.org/2004/07/UserAndRolesService.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.UserAndRolesService.UserDetailModel))]
    public partial class UserModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetailModel", Namespace="http://schemas.datacontract.org/2004/07/UserAndRolesService.Models")]
    [System.SerializableAttribute()]
    public partial class UserDetailModel : Client.UserAndRolesService.UserModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.UserAndRolesService.RolesDetailModel[] URolesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.UserAndRolesService.RolesDetailModel[] URoles {
            get {
                return this.URolesField;
            }
            set {
                if ((object.ReferenceEquals(this.URolesField, value) != true)) {
                    this.URolesField = value;
                    this.RaisePropertyChanged("URoles");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RolesDetailModel", Namespace="http://schemas.datacontract.org/2004/07/UserAndRolesService.Models")]
    [System.SerializableAttribute()]
    public partial class RolesDetailModel : Client.UserAndRolesService.RolesModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int URIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int URId {
            get {
                return this.URIdField;
            }
            set {
                if ((this.URIdField.Equals(value) != true)) {
                    this.URIdField = value;
                    this.RaisePropertyChanged("URId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RolesModel", Namespace="http://schemas.datacontract.org/2004/07/UserAndRolesService.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.UserAndRolesService.RoleWithUsers))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.UserAndRolesService.RolesDetailModel))]
    public partial class RolesModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RDescription {
            get {
                return this.RDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RDescriptionField, value) != true)) {
                    this.RDescriptionField = value;
                    this.RaisePropertyChanged("RDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RId {
            get {
                return this.RIdField;
            }
            set {
                if ((this.RIdField.Equals(value) != true)) {
                    this.RIdField = value;
                    this.RaisePropertyChanged("RId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RName {
            get {
                return this.RNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RNameField, value) != true)) {
                    this.RNameField = value;
                    this.RaisePropertyChanged("RName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleWithUsers", Namespace="http://schemas.datacontract.org/2004/07/UserAndRolesService.Models")]
    [System.SerializableAttribute()]
    public partial class RoleWithUsers : Client.UserAndRolesService.RolesModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.UserAndRolesService.UserModel[] UsersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.UserAndRolesService.UserModel[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleOperations", Namespace="http://schemas.datacontract.org/2004/07/UserAndRolesService.Models")]
    [System.SerializableAttribute()]
    public partial class RoleOperations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserRoleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserRoleId {
            get {
                return this.UserRoleIdField;
            }
            set {
                if ((this.UserRoleIdField.Equals(value) != true)) {
                    this.UserRoleIdField = value;
                    this.RaisePropertyChanged("UserRoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAndRolesModel", Namespace="http://schemas.datacontract.org/2004/07/UserAndRolesService.Models")]
    [System.SerializableAttribute()]
    public partial class UserAndRolesModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int URIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int URId {
            get {
                return this.URIdField;
            }
            set {
                if ((this.URIdField.Equals(value) != true)) {
                    this.URIdField = value;
                    this.RaisePropertyChanged("URId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserAndRolesService.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllList", ReplyAction="http://tempuri.org/IUser/GetAllListResponse")]
        Client.UserAndRolesService.UserModel[] GetAllList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllList", ReplyAction="http://tempuri.org/IUser/GetAllListResponse")]
        System.Threading.Tasks.Task<Client.UserAndRolesService.UserModel[]> GetAllListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetById", ReplyAction="http://tempuri.org/IUser/GetByIdResponse")]
        Client.UserAndRolesService.UserDetailModel[] GetById(int usrId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetById", ReplyAction="http://tempuri.org/IUser/GetByIdResponse")]
        System.Threading.Tasks.Task<Client.UserAndRolesService.UserDetailModel[]> GetByIdAsync(int usrId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Create", ReplyAction="http://tempuri.org/IUser/CreateResponse")]
        Client.UserAndRolesService.UserModel Create(Client.UserAndRolesService.UserModel usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Create", ReplyAction="http://tempuri.org/IUser/CreateResponse")]
        System.Threading.Tasks.Task<Client.UserAndRolesService.UserModel> CreateAsync(Client.UserAndRolesService.UserModel usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Update", ReplyAction="http://tempuri.org/IUser/UpdateResponse")]
        string Update(Client.UserAndRolesService.UserModel usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Update", ReplyAction="http://tempuri.org/IUser/UpdateResponse")]
        System.Threading.Tasks.Task<string> UpdateAsync(Client.UserAndRolesService.UserModel usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Delete", ReplyAction="http://tempuri.org/IUser/DeleteResponse")]
        string Delete(int usrId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Delete", ReplyAction="http://tempuri.org/IUser/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(int usrId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddUserRole", ReplyAction="http://tempuri.org/IUser/AddUserRoleResponse")]
        string AddUserRole(Client.UserAndRolesService.RoleOperations ar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddUserRole", ReplyAction="http://tempuri.org/IUser/AddUserRoleResponse")]
        System.Threading.Tasks.Task<string> AddUserRoleAsync(Client.UserAndRolesService.RoleOperations ar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/RemoveUserRole", ReplyAction="http://tempuri.org/IUser/RemoveUserRoleResponse")]
        string RemoveUserRole(Client.UserAndRolesService.RoleOperations ar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/RemoveUserRole", ReplyAction="http://tempuri.org/IUser/RemoveUserRoleResponse")]
        System.Threading.Tasks.Task<string> RemoveUserRoleAsync(Client.UserAndRolesService.RoleOperations ar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateUserRole", ReplyAction="http://tempuri.org/IUser/UpdateUserRoleResponse")]
        string UpdateUserRole(Client.UserAndRolesService.RoleOperations ar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateUserRole", ReplyAction="http://tempuri.org/IUser/UpdateUserRoleResponse")]
        System.Threading.Tasks.Task<string> UpdateUserRoleAsync(Client.UserAndRolesService.RoleOperations ar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : Client.UserAndRolesService.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<Client.UserAndRolesService.IUser>, Client.UserAndRolesService.IUser {
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.UserAndRolesService.UserModel[] GetAllList() {
            return base.Channel.GetAllList();
        }
        
        public System.Threading.Tasks.Task<Client.UserAndRolesService.UserModel[]> GetAllListAsync() {
            return base.Channel.GetAllListAsync();
        }
        
        public Client.UserAndRolesService.UserDetailModel[] GetById(int usrId) {
            return base.Channel.GetById(usrId);
        }
        
        public System.Threading.Tasks.Task<Client.UserAndRolesService.UserDetailModel[]> GetByIdAsync(int usrId) {
            return base.Channel.GetByIdAsync(usrId);
        }
        
        public Client.UserAndRolesService.UserModel Create(Client.UserAndRolesService.UserModel usr) {
            return base.Channel.Create(usr);
        }
        
        public System.Threading.Tasks.Task<Client.UserAndRolesService.UserModel> CreateAsync(Client.UserAndRolesService.UserModel usr) {
            return base.Channel.CreateAsync(usr);
        }
        
        public string Update(Client.UserAndRolesService.UserModel usr) {
            return base.Channel.Update(usr);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAsync(Client.UserAndRolesService.UserModel usr) {
            return base.Channel.UpdateAsync(usr);
        }
        
        public string Delete(int usrId) {
            return base.Channel.Delete(usrId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(int usrId) {
            return base.Channel.DeleteAsync(usrId);
        }
        
        public string AddUserRole(Client.UserAndRolesService.RoleOperations ar) {
            return base.Channel.AddUserRole(ar);
        }
        
        public System.Threading.Tasks.Task<string> AddUserRoleAsync(Client.UserAndRolesService.RoleOperations ar) {
            return base.Channel.AddUserRoleAsync(ar);
        }
        
        public string RemoveUserRole(Client.UserAndRolesService.RoleOperations ar) {
            return base.Channel.RemoveUserRole(ar);
        }
        
        public System.Threading.Tasks.Task<string> RemoveUserRoleAsync(Client.UserAndRolesService.RoleOperations ar) {
            return base.Channel.RemoveUserRoleAsync(ar);
        }
        
        public string UpdateUserRole(Client.UserAndRolesService.RoleOperations ar) {
            return base.Channel.UpdateUserRole(ar);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserRoleAsync(Client.UserAndRolesService.RoleOperations ar) {
            return base.Channel.UpdateUserRoleAsync(ar);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserAndRolesService.IRoles")]
    public interface IRoles {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/UserAndRolesList", ReplyAction="http://tempuri.org/IRoles/UserAndRolesListResponse")]
        Client.UserAndRolesService.UserAndRolesModel[] UserAndRolesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/UserAndRolesList", ReplyAction="http://tempuri.org/IRoles/UserAndRolesListResponse")]
        System.Threading.Tasks.Task<Client.UserAndRolesService.UserAndRolesModel[]> UserAndRolesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/GetAllRoleList", ReplyAction="http://tempuri.org/IRoles/GetAllRoleListResponse")]
        Client.UserAndRolesService.RolesModel[] GetAllRoleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/GetAllRoleList", ReplyAction="http://tempuri.org/IRoles/GetAllRoleListResponse")]
        System.Threading.Tasks.Task<Client.UserAndRolesService.RolesModel[]> GetAllRoleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/GetRoleById", ReplyAction="http://tempuri.org/IRoles/GetRoleByIdResponse")]
        Client.UserAndRolesService.RoleWithUsers[] GetRoleById(int rId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/GetRoleById", ReplyAction="http://tempuri.org/IRoles/GetRoleByIdResponse")]
        System.Threading.Tasks.Task<Client.UserAndRolesService.RoleWithUsers[]> GetRoleByIdAsync(int rId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/CreateRole", ReplyAction="http://tempuri.org/IRoles/CreateRoleResponse")]
        Client.UserAndRolesService.RolesModel CreateRole(Client.UserAndRolesService.RolesModel rl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/CreateRole", ReplyAction="http://tempuri.org/IRoles/CreateRoleResponse")]
        System.Threading.Tasks.Task<Client.UserAndRolesService.RolesModel> CreateRoleAsync(Client.UserAndRolesService.RolesModel rl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/UpdateRole", ReplyAction="http://tempuri.org/IRoles/UpdateRoleResponse")]
        string UpdateRole(Client.UserAndRolesService.RolesModel rl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/UpdateRole", ReplyAction="http://tempuri.org/IRoles/UpdateRoleResponse")]
        System.Threading.Tasks.Task<string> UpdateRoleAsync(Client.UserAndRolesService.RolesModel rl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/DeleteRole", ReplyAction="http://tempuri.org/IRoles/DeleteRoleResponse")]
        string DeleteRole(int rId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoles/DeleteRole", ReplyAction="http://tempuri.org/IRoles/DeleteRoleResponse")]
        System.Threading.Tasks.Task<string> DeleteRoleAsync(int rId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRolesChannel : Client.UserAndRolesService.IRoles, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RolesClient : System.ServiceModel.ClientBase<Client.UserAndRolesService.IRoles>, Client.UserAndRolesService.IRoles {
        
        public RolesClient() {
        }
        
        public RolesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RolesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RolesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RolesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.UserAndRolesService.UserAndRolesModel[] UserAndRolesList() {
            return base.Channel.UserAndRolesList();
        }
        
        public System.Threading.Tasks.Task<Client.UserAndRolesService.UserAndRolesModel[]> UserAndRolesListAsync() {
            return base.Channel.UserAndRolesListAsync();
        }
        
        public Client.UserAndRolesService.RolesModel[] GetAllRoleList() {
            return base.Channel.GetAllRoleList();
        }
        
        public System.Threading.Tasks.Task<Client.UserAndRolesService.RolesModel[]> GetAllRoleListAsync() {
            return base.Channel.GetAllRoleListAsync();
        }
        
        public Client.UserAndRolesService.RoleWithUsers[] GetRoleById(int rId) {
            return base.Channel.GetRoleById(rId);
        }
        
        public System.Threading.Tasks.Task<Client.UserAndRolesService.RoleWithUsers[]> GetRoleByIdAsync(int rId) {
            return base.Channel.GetRoleByIdAsync(rId);
        }
        
        public Client.UserAndRolesService.RolesModel CreateRole(Client.UserAndRolesService.RolesModel rl) {
            return base.Channel.CreateRole(rl);
        }
        
        public System.Threading.Tasks.Task<Client.UserAndRolesService.RolesModel> CreateRoleAsync(Client.UserAndRolesService.RolesModel rl) {
            return base.Channel.CreateRoleAsync(rl);
        }
        
        public string UpdateRole(Client.UserAndRolesService.RolesModel rl) {
            return base.Channel.UpdateRole(rl);
        }
        
        public System.Threading.Tasks.Task<string> UpdateRoleAsync(Client.UserAndRolesService.RolesModel rl) {
            return base.Channel.UpdateRoleAsync(rl);
        }
        
        public string DeleteRole(int rId) {
            return base.Channel.DeleteRole(rId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRoleAsync(int rId) {
            return base.Channel.DeleteRoleAsync(rId);
        }
    }
}
